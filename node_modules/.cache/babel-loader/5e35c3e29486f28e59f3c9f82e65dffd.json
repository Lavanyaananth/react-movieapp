{"ast":null,"code":"var _jsxFileName = \"/Users/Lavanya/Documents/Projects/react-movie-app/src/components/Movie/Movie.js\";\nimport React, { Component } from 'react';\nimport { API_KEY, API_URL } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        console.log(result);\n\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            // fetching actors\n            const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"/credits?api_key=\").concat(API_KEY);\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actor: result.cast,\n                directors,\n                loading: false\n              });\n            });\n          });\n        }\n      }).catch(error => console.error('Error:', error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // fetch movie\n\n    const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/Lavanya/Documents/Projects/react-movie-app/src/components/Movie/Movie.js"],"names":["React","Component","API_KEY","API_URL","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","result","json","console","log","status_code","setState","props","match","params","movieId","crew","filter","member","job","actor","cast","catch","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,cAA/B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAM,aAAN;;AACA,MAAMC,KAAN,SAAoBT,SAApB,CAA6B;AAAA;AAAA;AAAA,SACzBU,KADyB,GACjB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADiB;;AAAA,SAezBC,UAfyB,GAeXC,QAAD,IAAa;AACtBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACMC,MAAM,IAAGA,MAAM,CAACC,IAAP,EADf,EAECF,IAFD,CAEOC,MAAM,IAAI;AACbE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,YAAGA,MAAM,CAACI,WAAV,EAAsB;AAClB,eAAKC,QAAL,CAAc;AAACV,YAAAA,OAAO,EAAC;AAAT,WAAd;AACH,SAFD,MAEK;AACD,eAAKU,QAAL,CAAc;AAACb,YAAAA,KAAK,EAACQ;AAAP,WAAd,EAA+B,MAAM;AACjC;AACA,kBAAMH,QAAQ,aAAMd,OAAN,mBAAsB,KAAKuB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,8BAAyE3B,OAAzE,CAAd;AACAgB,YAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACOC,MAAM,IAAGA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEOC,MAAM,IAAI;AAEb,oBAAMN,SAAS,GAAGM,MAAM,CAACU,IAAP,CAAYC,MAAZ,CAAqBC,MAAD,IAAYA,MAAM,CAACC,GAAP,KAAe,UAA/C,CAAlB;AACA,mBAAKR,QAAL,CAAc;AACVS,gBAAAA,KAAK,EAAEd,MAAM,CAACe,IADJ;AAEVrB,gBAAAA,SAFU;AAGVC,gBAAAA,OAAO,EAAE;AAHC,eAAd;AAKH,aAVD;AAWH,WAdD;AAeH;AACJ,OAvBD,EAwBCqB,KAxBD,CAwBOC,KAAK,IAAIf,OAAO,CAACe,KAAR,CAAc,QAAd,EAAyBA,KAAzB,CAxBhB;AAyBH,KAzCwB;AAAA;;AAQzBC,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,QAAL,CAAe;AAACV,MAAAA,OAAO,EAAE;AAAV,KAAf,EADgB,CAEhB;;AACA,UAAME,QAAQ,aAAMd,OAAN,mBAAsB,KAAKuB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,sBAAiE3B,OAAjE,oBAAd;AACA,SAAKc,UAAL,CAAgBC,QAAhB;AACH;;AA6BDsB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAnDwB;;AAsD7B,eAAe7B,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport {API_KEY, API_URL} from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport'./Movie.css';\nclass Movie extends Component{\n    state = {\n        movie: null,\n        actors: null,\n        directors: [],\n        loading: false\n    }\n\n    componentDidMount (){\n        this.setState ({loading: true})\n        // fetch movie\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n        this.fetchItems(endpoint);\n    }\n\n    fetchItems = (endpoint) =>{\n        fetch(endpoint)\n        .then(result=> result.json())\n        .then (result => {\n            console.log(result);\n            if(result.status_code){\n                this.setState({loading:false});\n            }else{\n                this.setState({movie:result} , () => {\n                    // fetching actors\n                    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n                    fetch(endpoint)\n                    .then (result=> result.json())\n                    .then (result => {\n                        \n                        const directors = result.crew.filter( (member) => member.job === \"Director\");\n                        this.setState({\n                            actor: result.cast,\n                            directors,\n                            loading: false\n                        })\n                    })\n                })\n            }\n        })\n        .catch(error => console.error('Error:' , error))\n    }\n    render(){\n        return(\n            <div className=\"rmdb-movie\">\n                <Navigation />\n                <MovieInfo />\n                <MovieInfoBar />\n                <Spinner />\n            </div>\n        )\n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}