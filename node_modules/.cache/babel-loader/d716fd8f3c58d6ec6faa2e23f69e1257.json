{"ast":null,"code":"var _jsxFileName = \"/Users/Lavanya/Documents/Projects/react-movie-app/src/components/elements/MovieInfo/MovieInfo.js\";\nimport React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = props => {\n  return React.createElement(\"div\", {\n    className: \"rmdb-movieinfo\",\n    style: {\n      background: props.movie.backdrop_path ? \"url('\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(props.movie.backdrop_path, \"')\") : '#000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-thumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(MovieThumb, {\n    image: props.movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(props.movie.poster_path) : './images/no_image.jpg',\n    clickable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \" \", props.movie.title), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Plot\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" \", props.movie.overview), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"IMDB Rating \"), React.createElement(\"div\", {\n    className: \"rmdb-rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"100\",\n    optimum: \"100\",\n    low: \"40\",\n    high: \"70\",\n    value: props.movie.vote_aveerage * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"rmdb-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.movie.vote_average), props.directors.length > 1 ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" DIRECTORS\") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"DIRECTOR\"), props.directors.map((element, i) => {\n    return React.createElement(\"p\", {\n      key: i,\n      className: \"rmdb-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, element.name);\n  })), React.createElement(FontAwesome, {\n    className: \"fa-film\",\n    name: \"film\",\n    size: \"5x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/Lavanya/Documents/Projects/react-movie-app/src/components/elements/MovieInfo/MovieInfo.js"],"names":["React","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","FontAwesome","MovieThumb","MovieInfo","props","background","movie","backdrop_path","poster_path","title","overview","vote_aveerage","vote_average","directors","length","map","element","i","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,WAAxB,EAAqCC,aAArC,QAAyD,iBAAzD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAU;AACxB,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAED,KAAK,CAACE,KAAN,CAAYC,aAAZ,kBAAkCT,cAAlC,SAAmDE,aAAnD,SAAmEI,KAAK,CAACE,KAAN,CAAYC,aAA/E,UAAmG;AAD5G,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AACA,IAAA,KAAK,EAAIH,KAAK,CAACE,KAAN,CAAYE,WAAZ,aAA6BV,cAA7B,SAA8CC,WAA9C,SAA4DK,KAAK,CAACE,KAAN,CAAYE,WAAxE,IAAuF,uBADhG;AAEA,IAAA,SAAS,EAAE,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADL,EAMK;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMJ,KAAK,CAACE,KAAN,CAAYG,KAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKL,KAAK,CAACE,KAAN,CAAYI,QAAjB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,GAAG,EAAE,GAAZ;AAAgB,IAAA,GAAG,EAAC,KAApB;AAA0B,IAAA,OAAO,EAAC,KAAlC;AAAwC,IAAA,GAAG,EAAC,IAA5C;AAAiD,IAAA,IAAI,EAAC,IAAtD;AAA2D,IAAA,KAAK,EAAEN,KAAK,CAACE,KAAN,CAAYK,aAAZ,GAA4B,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACE,KAAN,CAAYM,YAAvC,CAFJ,EAGKR,KAAK,CAACS,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7B,GAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHxD,EAIKV,KAAK,CAACS,SAAN,CAAgBE,GAAhB,CAAoB,CAACC,OAAD,EAAUC,CAAV,KAAe;AAChC,WAAO;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAW,MAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCD,OAAO,CAACE,IAA9C,CAAP;AACH,GAFA,CAJL,CALJ,EAaI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,SAAvB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,IAAI,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CANL,CALH,CADJ;AA8BH,CA/BD;;AAgCA,eAAef,SAAf","sourcesContent":["import React from 'react';\nimport {IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = (props) =>{\n    return(\n        <div className=\"rmdb-movieinfo\"\n            style={{\n                background: props.movie.backdrop_path?`url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\n            }}\n        >\n           <div className=\"rmdb-movieinfo-content\">\n                <div className=\"rmdb-movieinfo-thumb\">\n                    <MovieThumb \n                    image = {props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`: './images/no_image.jpg'}\n                    clickable={false} />\n                </div>\n                <div className=\"rmdb-movieinfo-text\">\n                    <h1> {props.movie.title}</h1>\n                    <h3>Plot</h3>\n                    <p> {props.movie.overview}</p>  \n                    <h3>IMDB Rating </h3>\n                    <div className=\"rmdb-rating\">\n                        <meter min =\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_aveerage * 10}></meter>\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n                        {props.directors.length > 1 ? <h3> DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n                        {props.directors.map((element, i) =>{\n                            return(<p key={i} className=\"rmdb-director\">{element.name}</p>)\n                        } )}\n                    </div>\n                    <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\"></FontAwesome>\n                 </div>\n           </div>\n        </div>\n    )\n}\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}